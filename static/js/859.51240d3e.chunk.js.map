{"version":3,"file":"static/js/859.51240d3e.chunk.js","mappings":"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","sources":["components/checkbox/Checkbox.js","components/field/Field.js","components/field/FieldTerm.js","components/input/Input.js","hook/useToggle.js","components/input/InputTogglePassword.js","components/label/Label.js","layouts/authenLayout/headSign/HeadSign.js","pages/sign/SignIn.js"],"sourcesContent":["import { useController } from \"react-hook-form\";\r\nimport { CheckIcon } from \"../icons/Icons\";\r\n\r\nfunction Checkbox({ name, control, className, checked, onClick, ...props }) {\r\n  const { field } = useController({\r\n    name,\r\n    defaultValue: \"\",\r\n    control,\r\n  });\r\n  return (\r\n    <label\r\n      className={`flex items-center justify-center text-white w-5 h-5 border-2 border-strock cursor-pointer ${\r\n        checked && \" bg-primary\"\r\n      } rounded ${className}`}\r\n    >\r\n      {checked && <CheckIcon />}\r\n      <input type=\"checkbox\" className=\"hidden\" name={name} {...field} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Checkbox;\r\n","function Field({ children, className }) {\r\n  return (\r\n    <div className={`flex flex-col gap-y-3 pt-3 mb-3 ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Field;\r\n","function FieldTerm({ children }) {\r\n  return (\r\n    <div className=\"flex flex-row items-start gap-x-5 pt-3 mb-5\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldTerm;\r\n","import { useController } from \"react-hook-form\";\r\n\r\nfunction Input({\r\n  name = \"\",\r\n  className,\r\n  placeholder,\r\n  control,\r\n  error = \"\",\r\n  type = \"text\",\r\n  ...props\r\n}) {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <div className=\"relative\">\r\n      <input\r\n        className={`py-4 px-6 text-text4 bg-white dark:bg-darkStroke dark:text-white text-sm w-full max-w-full border outline-none ${\r\n          error.lenght > 0\r\n            ? \"border-error\"\r\n            : \"border-strock dark:border-darkStroke\"\r\n        }  rounded-lg ${className}`}\r\n        id={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {error.length > 0 ? (\r\n        <span className=\"absolute top-1/2 left-6 -translate-y-1/2 pointer-events-none text-error text-sm font-normal error-input\">\r\n          {error}\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useState } from \"react\";\r\n\r\nconst useToggle = () => {\r\n  const [value, setValue] = useState(false);\r\n  const toggle = () => {\r\n    setValue((prev) => !prev);\r\n  };\r\n  return { value, toggle };\r\n};\r\nexport default useToggle;\r\n","import { useController } from \"react-hook-form\";\r\nimport useToggle from \"../../hook/useToggle\";\r\nimport { EyeCloseIcon, EyeIcon } from \"../icons/Icons\";\r\n\r\nfunction InputTogglePassword({\r\n  name = \"\",\r\n  className,\r\n  placeholder,\r\n  control,\r\n  error = \"\",\r\n  type = \"text\",\r\n  ...props\r\n}) {\r\n  const { value, toggle } = useToggle();\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <div className=\"relative\">\r\n      <input\r\n        className={`py-4 px-6 text-text-text4 bg-white dark:bg-darkStroke dark:text-white text-sm w-full max-w-full border-[1px] outline-none ${\r\n          error.lenght > 0\r\n            ? \"border-error\"\r\n            : \"border-strock dark:border-darkStroke\"\r\n        } rounded-lg ${className}`}\r\n        id={name}\r\n        type={value ? \"text\" : \"password\"}\r\n        placeholder={placeholder}\r\n        {...field}\r\n        {...props}\r\n      />\r\n      {error.length > 0 ? (\r\n        <span className=\"absolute top-1/2 left-6 -translate-y-1/2 pointer-events-none text-error text-sm font-normal error-input\">\r\n          {error}\r\n        </span>\r\n      ) : null}\r\n      <span\r\n        className=\"absolute top-1/2 right-3 -translate-y-1/2 cursor-pointer\"\r\n        onClick={toggle}\r\n      >\r\n        {value ? <EyeIcon /> : <EyeCloseIcon />}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputTogglePassword;\r\n","function Label({ children, htmlFor = \"\", className }) {\r\n  return (\r\n    <label\r\n      htmlFor={htmlFor}\r\n      className={`text-text2 dark:text-text3 text-sm font-medium cursor-pointer ${className}`}\r\n    >\r\n      {children}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Label;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction HeadSign({ title, description, link, to }) {\r\n  return (\r\n    <div className=\" text-center mb-6 lg:mb-5\">\r\n      <h1 className=\"font-semibold text-lg lg:text-xl mb-1 lg:mb-3 dark:text-white text-text1\">\r\n        {title}\r\n      </h1>\r\n      <h3 className=\"text-sm font-normal text-text3\">\r\n        {description}{\" \"}\r\n        <NavLink to={to} className=\"text-primary font-semibold\">\r\n          {link}\r\n        </NavLink>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\nHeadSign.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  link: PropTypes.string,\r\n  to: PropTypes.string,\r\n};\r\n\r\nexport default HeadSign;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Field from \"../../components/field/Field\";\r\nimport { GoogleIcon } from \"../../components/icons/Icons\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Label from \"../../components/label/Label\";\r\nimport ErrorComponent from \"../../components/common/ErrorComponent\";\r\nimport FieldTerm from \"../../components/field/FieldTerm\";\r\nimport InputTogglePassword from \"../../components/input/InputTogglePassword\";\r\nimport Button from \"../../components/button/Button\";\r\nimport Checkbox from \"../../components/checkbox/Checkbox\";\r\nimport HeadSign from \"../../layouts/authenLayout/headSign/HeadSign\";\r\nconst schema = yup\r\n  .object({\r\n    email: yup\r\n      .string()\r\n      .email(\"This email already registered \")\r\n      .required(\"This field is registered\"),\r\n    password: yup\r\n      .string()\r\n      .min(8, { message: \"Password must be 8 character \" })\r\n      .required(\"This field is registered\"),\r\n  })\r\n  .required();\r\nfunction SignIn() {\r\n  const {\r\n    handleSubmit,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onSubmit\",\r\n    resolver: yupResolver(schema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n  const termWatch = watch(\"term\");\r\n  const handleSignIn = (values) => {\r\n    console.log({ values });\r\n  };\r\n  return (\r\n    <div>\r\n      <HeadSign\r\n        title=\"Welcome Back!\"\r\n        description=\"Don’t have an account?  \"\r\n        link=\"Sign up\"\r\n        to=\"/sign-up\"\r\n      />\r\n      <div className=\"\">\r\n        <button className=\"w-full border-[1px] border-strock dark:bg-darkStroke dark:border-darkStroke dark:text-white flex items-center justify-center gap-x-3 py-3 rounded-lg mb-5 text-base font-semibold text-text2\">\r\n          <GoogleIcon />\r\n          Sign in with google\r\n        </button>\r\n\r\n        <form onSubmit={handleSubmit(handleSignIn)}>\r\n          <Field>\r\n            <Label htmlFor=\"email\">Email *</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              error={errors.email?.message}\r\n              control={control}\r\n              placeholder=\"example@gmail.com\"\r\n            />\r\n          </Field>\r\n          <Field>\r\n            <Label htmlFor=\"password\">Password *</Label>\r\n            <InputTogglePassword\r\n              name=\"password\"\r\n              error={errors.password?.message?.message}\r\n              control={control}\r\n              placeholder=\"Create a password\"\r\n            />\r\n          </Field>\r\n          <div className=\"text-right mb-5\">\r\n            <NavLink\r\n              className=\"text-sm font-medium text-primary\"\r\n              to=\"/forgot-password\"\r\n            >\r\n              Forgot password\r\n            </NavLink>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"min-h-[56px] rounded-lg text-white text-base font-semibold  py-3\"\r\n              kindOf=\"primary\"\r\n              isLoading={false}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SignIn;\r\n\r\n// export default ErrorBoundary(SignUp, {\r\n//   fallbackComponent: ErrorComponent,\r\n// });\r\n"],"names":["name","control","className","checked","field","onClick","useController","defaultValue","type","children","placeholder","error","props","lenght","id","length","useState","value","setValue","toggle","prev","useToggle","htmlFor","title","description","link","to","schema","yup","email","required","password","min","message","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","watch","errors","formState","onSubmit","values","console","log","kindOf","isLoading"],"sourceRoot":""}